#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *next;
};
void linkedListTraversal(struct node *ptr){
    while(ptr!=NULL){
        printf("Element : %d \n",ptr->data);
        ptr=ptr->next;
    }
}
struct node *insertAtFirst(struct node *head,int data){
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    ptr->data=data;
    ptr->next=head;
    return ptr;
}
struct node*insertAtIndex(struct node *head,int data,int index){
    struct node*ptr=(struct node *)malloc(sizeof(struct node));
    struct node*p=head;
    int i=0;
    while(i!=index-1){
        p=p->next;
        i++;
    }
    ptr->data=data;
    ptr->next=p->next;
    p->next=ptr;
    return head;
}
struct node*insertAtEnd(struct node *head,int data){
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    ptr->data=data;
    struct node *p=head;
    while(p->next!=NULL){
        p=p->next;
    }
    p->next=ptr;
    ptr->next=NULL;
    return head;
}
struct node *insertAfterNode(struct node *head,struct node *prevnode,int data){
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    ptr->data=data;
    ptr->next=prevnode->next;
    prevnode->next=ptr;
    return head;
}
int main(){
    struct node*head;
    struct node*second;
    struct node*third;
    struct node*fourth;
    head=(struct node*)malloc(sizeof(struct node));
    second=(struct node*)malloc(sizeof(struct node));
    third=(struct node*)malloc(sizeof(struct node));
    fourth=(struct node*)malloc(sizeof(struct node));
    head->data=1;
    head->next=second;
    second->data=2;
    second->next=third;
    third->data=3;
    third->next=fourth;
    fourth->data=4;
    fourth->next=NULL;
    printf("The Linked List Before Insertion Is : \n");
    linkedListTraversal(head);
    head=insertAtFirst(head,11);
    printf("\nThe Linked List After Insertion(Insertion At Beginning) Is : \n");
    linkedListTraversal(head);
    head=insertAtIndex(head,12,3);
    printf("\nThe Linked List After Insertion(Insertion At Index) Is :\n");
    linkedListTraversal(head);
    head=insertAtEnd(head,13);
    printf("\nThe Linked List After Insertion(Insertion At End) Is :\n");
    linkedListTraversal(head);
    head=insertAfterNode(head,fourth,14);
    printf("\nThe Linked List After Insertion(Insertion After Prevnode) Is :\n");
    linkedListTraversal(head);
    return 0;
}
